#BlueJ class context
comment0.params=
comment0.target=JDABuilder()
comment0.text=\r\n\ Creates\ a\ completely\ empty\ JDABuilder.<br>\r\n\ If\ you\ use\ this,\ you\ need\ to\ set\ the\ bot\ token\ using\r\n\ {@link\ net.dv8tion.jda.JDABuilder\#setBotToken(String)\ setBotToken(String)}\r\n\ before\ calling\ {@link\ net.dv8tion.jda.JDABuilder\#buildAsync()\ buildAsync()}\r\n\ or\ {@link\ net.dv8tion.jda.JDABuilder\#buildBlocking()\ buildBlocking()}\r\n
comment1.params=botToken
comment1.target=JDABuilder\ setBotToken(java.lang.String)
comment1.text=\r\n\ Sets\ the\ botToken\ that\ will\ be\ used\ by\ the\ {@link\ net.dv8tion.jda.JDA}\ instance\ to\ log\ in\ when\r\n\ {@link\ net.dv8tion.jda.JDABuilder\#buildAsync()\ buildAsync()}\r\n\ or\ {@link\ net.dv8tion.jda.JDABuilder\#buildBlocking()\ buildBlocking()}\r\n\ is\ called.\r\n\r\n\ @param\ botToken\r\n\ \ \ \ \ \ \ \ \ \ The\ token\ of\ the\ bot-account\ that\ you\ would\ like\ to\ login\ with.\r\n\ @return\r\n\ \ \ \ \ \ Returns\ the\ {@link\ net.dv8tion.jda.JDABuilder\ JDABuilder}\ instance.\ Useful\ for\ chaining.\r\n
comment10.params=
comment10.target=net.dv8tion.jda.JDA\ buildBlocking()
comment10.text=\r\n\ Builds\ a\ new\ {@link\ net.dv8tion.jda.JDA}\ instance\ and\ uses\ the\ provided\ email\ and\ password\ to\ start\ the\ login\ process.<br>\r\n\ This\ method\ will\ block\ until\ JDA\ has\ logged\ in\ and\ finished\ loading\ all\ resources.\ This\ is\ an\ alternative\r\n\ to\ using\ {@link\ net.dv8tion.jda.events.ReadyEvent\ ReadyEvent}.\r\n\r\n\ @return\r\n\ \ \ \ \ \ A\ {@link\ net.dv8tion.jda.JDA}\ Object\ that\ is\ <b>guaranteed</b>\ to\ be\ logged\ in\ and\ finished\ loading.\r\n\ @throws\ LoginException\r\n\ \ \ \ \ \ \ \ \ \ If\ the\ provided\ email-password\ combination\ fails\ the\ Discord\ security\ authentication.\r\n\ @throws\ IllegalArgumentException\r\n\ \ \ \ \ \ \ \ \ \ If\ either\ the\ provided\ email\ or\ password\ is\ empty\ or\ null.\r\n\ @throws\ InterruptedException\r\n\ \ \ \ \ \ \ \ \ \ If\ an\ interrupt\ request\ is\ received\ while\ waiting\ for\ {@link\ net.dv8tion.jda.JDA}\ to\ finish\ logging\ in.\r\n\ \ \ \ \ \ \ \ \ \ This\ would\ most\ likely\ be\ caused\ by\ a\ JVM\ shutdown\ request.\r\n
comment11.params=event
comment11.target=void\ onReady(net.dv8tion.jda.events.ReadyEvent)
comment12.params=
comment12.target=void\ login()
comment13.params=email
comment13.target=JDABuilder\ setEmail(java.lang.String)
comment14.params=password
comment14.target=JDABuilder\ setPassword(java.lang.String)
comment2.params=proxyUrl\ proxyPort
comment2.target=JDABuilder\ setProxy(java.lang.String,\ int)
comment2.text=\r\n\ Sets\ the\ proxy\ that\ will\ be\ used\ by\ <b>ALL</b>\ JDA\ instances.<br>\r\n\ Once\ this\ is\ set\ <b>IT\ CANNOT\ BE\ CHANGED.</b><br>\r\n\ After\ a\ JDA\ instance\ as\ been\ created,\ this\ method\ can\ never\ be\ called\ again,\ even\ if\ you\ are\ creating\ a\ new\ JDA\ object.<br>\r\n\ <b>Note\:</b>\ currently\ this\ only\ supports\ HTTP\ proxies.\r\n\r\n\ @param\ proxyUrl\r\n\ \ \ \ \ \ \ \ \ \ The\ url\ of\ the\ proxy.\r\n\ @param\ proxyPort\r\n\ \ \ \ \ \ \ \ \ \ The\ port\ of\ the\ proxy.\ \ Usually\ this\ is\ 8080.\r\n\ @return\r\n\ \ \ \ \ \ Returns\ the\ {@link\ net.dv8tion.jda.JDABuilder\ JDABuilder}\ instance.\ Useful\ for\ chaining.\r\n\ @throws\ UnsupportedOperationException\r\n\ \ \ \ \ \ \ \ \ \ If\ this\ method\ is\ called\ after\ proxy\ settings\ have\ already\ been\ set\ or\ after\ at\ least\ 1\ JDA\ object\ has\ been\ created.\r\n
comment3.params=enabled
comment3.target=JDABuilder\ setAudioEnabled(boolean)
comment3.text=\r\n\ Enables/Disables\ Voice\ functionality.<br>\r\n\ This\ is\ useful,\ if\ your\ current\ system\ doesn't\ support\ Voice\ and\ you\ do\ not\ need\ it.\r\n\ <p>\r\n\ Default\:\ true\r\n\r\n\ @param\ enabled\r\n\ \ \ \ \ \ \ \ \ \ True\ -\ enables\ voice\ support.\r\n\ @return\r\n\ \ \ \ \ \ \ \ \ \ Returns\ the\ {@link\ net.dv8tion.jda.JDABuilder\ JDABuilder}\ instance.\ Useful\ for\ chaining.\r\n
comment4.params=reconnect
comment4.target=JDABuilder\ setAutoReconnect(boolean)
comment4.text=\r\n\ Sets\ whether\ or\ not\ JDA\ should\ try\ to\ reconnect,\ if\ a\ connection-error\ occured.\r\n\ This\ will\ use\ and\ incremental\ reconnect\ (timeouts\ are\ increased\ each\ time\ an\ attempt\ fails).\r\n\r\n\ Default\ is\ true.\r\n\r\n\ @param\ reconnect\r\n\ \ \ \ \ \ If\ true\ -\ enables\ autoReconnect\r\n\ @return\r\n\ \ \ \ \ \ Returns\ the\ {@link\ net.dv8tion.jda.JDABuilder\ JDABuilder}\ instance.\ Useful\ for\ chaining.\r\n
comment5.params=useAnnotated
comment5.target=JDABuilder\ useAnnotatedEventManager(boolean)
comment5.text=\r\n\ <b>This\ method\ is\ deprecated\!\ Please\ switch\ to\ {@link\ \#setEventManager(IEventManager)}.</b>\r\n\ <p>\r\n\ Changes\ the\ internal\ EventManager.\r\n\ The\ default\ EventManager\ is\ {@link\ net.dv8tion.jda.hooks.InterfacedEventManager\ InterfacedEventListener}.\r\n\ There\ is\ also\ an\ {@link\ AnnotatedEventManager\ AnnotatedEventManager}\ available.\r\n\r\n\ @param\ useAnnotated\r\n\ \ \ \ \ \ Whether\ or\ not\ to\ use\ the\ {@link\ net.dv8tion.jda.hooks.AnnotatedEventManager\ AnnotatedEventManager}\r\n\ @return\r\n\ \ \ \ \ \ Returns\ the\ {@link\ net.dv8tion.jda.JDABuilder\ JDABuilder}\ instance.\ Useful\ for\ chaining.\r\n
comment6.params=manager
comment6.target=JDABuilder\ setEventManager(net.dv8tion.jda.hooks.IEventManager)
comment6.text=\r\n\ Changes\ the\ internally\ used\ EventManager.\r\n\ There\ are\ 2\ provided\ Implementations\:\r\n\ <ul>\r\n\ \ \ \ \ <li>{@link\ net.dv8tion.jda.hooks.InterfacedEventManager}\ which\ uses\ the\ Interface\ {@link\ net.dv8tion.jda.hooks.EventListener}\r\n\ \ \ \ \ (tip\:\ use\ the\ {@link\ net.dv8tion.jda.hooks.ListenerAdapter}).\ This\ is\ the\ default\ EventManager.</li>\r\n\ \ \ \ \ <li>{@link\ net.dv8tion.jda.hooks.AnnotatedEventManager}\ which\ uses\ the\ Annotation\ {@link\ net.dv8tion.jda.hooks.SubscribeEvent}\ to\ mark\ the\ methods\ that\ listen\ for\ events.</li>\r\n\ </ul>\r\n\ You\ can\ also\ create\ your\ own\ EventManager\ (See\ {@link\ net.dv8tion.jda.hooks.IEventManager}).\r\n\r\n\ @param\ manager\r\n\ \ \ \ \ \ The\ new\ {@link\ net.dv8tion.jda.hooks.IEventManager}\ to\ use\r\n\ @return\r\n\ \ \ \ \ \ Returns\ the\ {@link\ net.dv8tion.jda.JDABuilder\ JDABuilder}\ instance.\ Useful\ for\ chaining.\r\n
comment7.params=listener
comment7.target=JDABuilder\ addListener(java.lang.Object)
comment7.text=\r\n\ Adds\ a\ listener\ to\ the\ list\ of\ listeners\ that\ will\ be\ used\ to\ populate\ the\ {@link\ net.dv8tion.jda.JDA}\ object.\r\n\ This\ uses\ the\ {@link\ net.dv8tion.jda.hooks.InterfacedEventManager\ InterfacedEventListener}\ by\ default.\r\n\ To\ switch\ to\ the\ {@link\ net.dv8tion.jda.hooks.AnnotatedEventManager\ AnnotatedEventManager},\ use\ {@link\ \#useAnnotatedEventManager(boolean)}.\r\n\r\n\ Note\:\ when\ using\ the\ {@link\ net.dv8tion.jda.hooks.InterfacedEventManager\ InterfacedEventListener}\ (default),\r\n\ given\ listener\ <b>must</b>\ be\ instance\ of\ {@link\ net.dv8tion.jda.hooks.EventListener\ EventListener}\!\r\n\r\n\ @param\ listener\r\n\ \ \ \ \ \ \ \ \ \ The\ listener\ to\ add\ to\ the\ list.\r\n\ @return\r\n\ \ \ \ \ \ Returns\ the\ {@link\ net.dv8tion.jda.JDABuilder\ JDABuilder}\ instance.\ Useful\ for\ chaining.\r\n
comment8.params=listener
comment8.target=JDABuilder\ removeListener(java.lang.Object)
comment8.text=\r\n\ Removes\ a\ listener\ from\ the\ list\ of\ listeners.\r\n\r\n\ @param\ listener\r\n\ \ \ \ \ \ \ \ \ \ The\ listener\ to\ remove\ from\ the\ list.\r\n\ @return\r\n\ \ \ \ \ \ Returns\ the\ {@link\ net.dv8tion.jda.JDABuilder\ JDABuilder}\ instance.\ Useful\ for\ chaining.\r\n
comment9.params=
comment9.target=net.dv8tion.jda.JDA\ buildAsync()
comment9.text=\r\n\ Builds\ a\ new\ {@link\ net.dv8tion.jda.JDA}\ instance\ and\ uses\ the\ provided\ email\ and\ password\ to\ start\ the\ login\ process.<br>\r\n\ The\ login\ process\ runs\ in\ a\ different\ thread,\ so\ while\ this\ will\ return\ immediately,\ {@link\ net.dv8tion.jda.JDA}\ has\ not\r\n\ finished\ loading,\ thus\ many\ {@link\ net.dv8tion.jda.JDA}\ methods\ have\ the\ chance\ to\ return\ incorrect\ information.\r\n\ <p>\r\n\ If\ you\ wish\ to\ be\ sure\ that\ the\ {@link\ net.dv8tion.jda.JDA}\ information\ is\ correct,\ please\ use\r\n\ {@link\ net.dv8tion.jda.JDABuilder\#buildBlocking()\ buildBlocking()}\ or\ register\ a\r\n\ {@link\ net.dv8tion.jda.events.ReadyEvent\ ReadyEvent}\ {@link\ net.dv8tion.jda.hooks.EventListener\ EventListener}.\r\n\r\n\ @return\r\n\ \ \ \ \ \ A\ {@link\ net.dv8tion.jda.JDA}\ instance\ that\ has\ started\ the\ login\ process.\ It\ is\ unknown\ as\ to\ whether\ or\ not\ loading\ has\ finished\ when\ this\ returns.\r\n\ @throws\ LoginException\r\n\ \ \ \ \ \ \ \ \ \ If\ the\ provided\ email-password\ combination\ fails\ the\ Discord\ security\ authentication.\r\n\ @throws\ IllegalArgumentException\r\n\ \ \ \ \ \ \ \ \ \ If\ either\ the\ provided\ email\ or\ password\ is\ empty\ or\ null.\r\n
numComments=15
